(ns learnclojure.chapt3.core7)
;;clojure提供了一些具体的数据结构供我们使用，它们都实习了一个或多个抽象
;;它们的区别大多在集合的构建方式

;;列表 list
;;一般都是用来做函数调用的，用来存储数据的场景不多，这和其他lisp方言不同，因为clojure使用更丰富的数据解构，如map，set，vector和序列。
;;序列在很大程度上跟list是相似的，这使得我们几乎在代码里不会直接用到list

;clojure的list是单向链表，所以只对链头支持高效的访问和修改(conj，pop，rest等函数)，由于是链表，所以不支持高效的随机访问。
;;它也不支持get，因为它的性能达不到get亚线性的要求。

;;列表是自身的序列